- name: listener_http
  '@type': type.googleapis.com/envoy.config.listener.v3.Listener
  '!@@ address': "0.0.0.0:80"
  listener_filters:
    - name: "envoy.filters.listener.http_inspector"
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.http_inspector.v3.HttpInspector
  filter_chains:
    - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_http
            http_filters:
              - "!@@ http_router"
            route_config:
              name: listener_http
              virtual_hosts:

                # Config other HTTP virtual hosts here.

                # Demo HTTP endpoint.
                - name: demo_unix_ping_pong
                  domains:
                    - "test.example.com"
                    - "localhost"
                  routes:
                    - match:
                        path: "/ping"
                      route:
                        cluster: demo_unix_ping_pong
                    - "!@@ acme_challenge"

                # Force redirect HTTP traffic to HTTPS.
                - name: force_https
                  domains: [ "*" ]
                  routes:
                    - "!@@ acme_challenge"
                    - "!@@ redirect_to_https"

- name: listener_https
  '@type': type.googleapis.com/envoy.config.listener.v3.Listener
  "!@@ address": "0.0.0.0:443"
  listener_filters:
    - name: tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
  filter_chains:
    - "!@@ sds_tls": "domainName/test.example.com"
      filter_chain_match:
        server_names:
          - test.example.com
      filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_https
            http_filters:
              - "!@@ http_router"
            route_config:
              name: test.example.com
              virtual_hosts:
                - name: test.example.com
                  domains:
                    - "test.example.com"
                  routes:
                    - match:
                        path: "/ping"
                      route:
                        cluster: demo_unix_ping_pong
                    - match:
                        prefix: "/"
                      direct_response:
                        status: 200
                        body:
                          inline_string: "It works!"
    - "!@@ sds_tls": "certName/example.com"
      filter_chain_match:
        server_names:
          - "example.com"
          - "*.example.com"
      filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_http
            http_filters:
              - "!@@ http_router"
            route_config:
              name: example.com
              virtual_hosts:
                - name: example.com
                  domains:
                    - "example.com"
                    - "*.example.com"
                  routes:
                    - match:
                        path: "/ping"
                      route:
                        cluster: demo_unix_ping_pong
                    - match:
                        prefix: "/"
                      direct_response:
                        status: 200
                        body:
                          inline_string: "It works!"

- name: demo_unix_ping_pong
  '@type': type.googleapis.com/envoy.config.listener.v3.Listener
  "!@@ address": "unix:/tmp/envoy-demo-ping-pong.sock"
  filter_chains:
    - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_demo_unix_ping_pong
            http_filters:
              - "!@@ http_router"
            route_config:
              name: local_route
              virtual_hosts:
                - name: demo_unix_ping_pong
                  domains: [ "*" ]
                  routes:
                    - match:
                        path: "/ping"
                      direct_response:
                        status: 200
                        body:
                          inline_string: "pong"
